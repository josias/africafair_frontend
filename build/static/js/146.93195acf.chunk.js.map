{"version":3,"sources":["views/application/customer/ProductReview/ReviewEdit.js","views/application/customer/ProductReview/index.js","ui-component/extended/Chip.js"],"names":["reviewState","value","label","ReviewEdit","open","handleCloseDialog","useState","currency","setCurrency","setValue","Dialog","onClose","sx","maxWidth","DialogTitle","DialogContent","Grid","container","spacing","gridSpacing","my","item","xs","TextField","id","fullWidth","defaultValue","multiline","rows","Typography","align","variant","Rating","name","precision","onChange","event","newValue","select","target","map","option","MenuItem","DialogActions","AnimateButton","Button","onClick","createData","author","review","rating","date","status","rowsInitial","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","theme","selected","TableHead","TableRow","TableCell","padding","pl","Checkbox","color","indeterminate","checked","inputProps","colSpan","length","headCell","disablePadding","sortDirection","TableSortLabel","active","direction","property","Box","component","visuallyHidden","pr","palette","mode","EnhancedTableToolbar","Toolbar","p","secondary","main","flexGrow","Tooltip","title","IconButton","size","fontSize","ProductReview","useTheme","setOpen","handleClickOpenDialog","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","setRows","handleClick","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","MainCard","content","CardContent","justifyContent","alignItems","sm","InputProps","startAdornment","InputAdornment","position","newString","newRows","filter","row","matches","containsQuery","forEach","toString","toLowerCase","includes","placeholder","textAlign","TableContainer","Table","minWidth","newSelectedId","n","TableBody","isItemSelected","labelId","hover","role","tabIndex","scope","cursor","readOnly","Chip","chipcolor","style","height","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","disabled","others","defaultSX","primary","light","bgcolor","dark","outlineSX","border","borderColor","success","error","orange","warning","grey","SX"],"mappings":"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","file":"static/js/146.93195acf.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Rating, TextField, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// review state options\r\nconst reviewState = [\r\n    {\r\n        value: '1',\r\n        label: 'Published'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Pending'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'confirm'\r\n    }\r\n];\r\n\r\nconst ReviewEdit = ({ open, handleCloseDialog }) => {\r\n    // handle review status change\r\n    const [currency, setCurrency] = useState('1');\r\n    const handleSelectChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    // handle star rating\r\n    const [value, setValue] = useState(2);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleCloseDialog}\r\n            sx={{\r\n                '&>div:nth-child(3)': {\r\n                    '&>div': {\r\n                        maxWidth: 400\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle>Edit Review</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={gridSpacing} sx={{ my: 0 }}>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic-review-product\" fullWidth label=\"Product \" defaultValue=\"Apple Watch Series 4\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"outlined-basic-review-author\" fullWidth label=\"Author \" defaultValue=\"Joseph William\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"outlined-basic-review\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            label=\"Text of review\"\r\n                            defaultValue=\"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography align=\"left\" variant=\"body2\">\r\n                            Rating\r\n                        </Typography>\r\n                        <Rating\r\n                            name=\"simple-controlled\"\r\n                            value={value}\r\n                            precision={0.5}\r\n                            onChange={(event, newValue) => {\r\n                                setValue(newValue);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"standard-select-currency\"\r\n                            select\r\n                            label=\"Status\"\r\n                            value={currency}\r\n                            fullWidth\r\n                            onChange={handleSelectChange}\r\n                        >\r\n                            {reviewState.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <AnimateButton>\r\n                    <Button variant=\"contained\">Create</Button>\r\n                </AnimateButton>\r\n                <Button variant=\"text\" onClick={handleCloseDialog}>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nReviewEdit.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleCloseDialog: PropTypes.func\r\n};\r\n\r\nexport default ReviewEdit;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    CardContent,\r\n    Checkbox,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Rating,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n// project imports\r\nimport ReviewEdit from './ReviewEdit';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Chip from 'ui-component/extended/Chip';\r\n\r\n// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterListTwoTone';\r\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyTwoTone';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\n\r\n// table data\r\nfunction createData(name, author, review, rating, date, status) {\r\n    return { name, author, review, rating, date, status };\r\n}\r\n\r\nconst rowsInitial = [\r\n    createData('Apple Watch Series 1', 'Joseph William', 'The Series 4 is a significant step...', 3.5, '12.07.2018', 1),\r\n    createData('Apple X2 2', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 2),\r\n    createData('Apple Watch Series 3', 'Larry Doe', 'The Series 4 is a significant step...', 4.5, '12.07.2018', 2),\r\n    createData('Apple Watch Series 4', 'Joseph William', 'The Series 4 is a significant step...', 3.0, '12.07.2018', 3),\r\n    createData('Apple X2 5', 'Anshan Handgun', 'The Series 4 is a significant step...', 2.0, '12.07.2018', 2),\r\n    createData('Apple X2 6', 'Larry Doe', 'The Series 4 is a significant step...', 2.5, '12.07.2018', 1),\r\n    createData('Apple Watch Series 7', 'Joseph William', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 3),\r\n    createData('Apple X2 8', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 3),\r\n    createData('Apple Watch Series 9', 'Larry Doe', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 1),\r\n    createData('Apple Watch Series 10', 'Joseph William', 'The Series 4 is a significant step...', 3.5, '12.07.2018', 2),\r\n    createData('Apple X2 11', 'Anshan Handgun', 'The Series 4 is a significant step...', 1.0, '12.07.2018', 1),\r\n    createData('Apple X2 12', 'Larry Doe', 'The Series 4 is a significant step...', 1.5, '12.07.2018', 1),\r\n    createData('Apple Watch Series 13', 'Joseph William', 'The Series 4 is a significant step...', 2.5, '12.07.2018', 3),\r\n    createData('Apple X2 14', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 1),\r\n    createData('Apple Watch Series 15', 'Larry Doe', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 2)\r\n];\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\nconst headCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Product Name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'author',\r\n        numeric: true,\r\n        label: 'Author',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'review',\r\n        numeric: true,\r\n        label: 'Review',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'rating',\r\n        numeric: true,\r\n        label: 'Rating',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'date',\r\n        numeric: true,\r\n        label: 'Date',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        label: 'Status',\r\n        align: 'center'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE HEADER ||============================== //\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, theme, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={7}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <Box component=\"span\" sx={visuallyHidden}>\r\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </Box>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}>\r\n                            Action\r\n                        </Typography>\r\n                    </TableCell>\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    theme: PropTypes.object,\r\n    selected: PropTypes.array,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| TABLE HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"h4\">\r\n                {numSelected} Selected\r\n            </Typography>\r\n        ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n                Nutrition\r\n            </Typography>\r\n        )}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| PRODUCT REVIEW LIST ||============================== //\r\n\r\nconst ProductReview = () => {\r\n    const theme = useTheme();\r\n\r\n    // open dialog to edit review\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpenDialog = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleCloseDialog = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [search, setSearch] = useState('');\r\n    const [rows, setRows] = useState(rowsInitial);\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString || '');\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['name', 'author', 'review'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setRows(newRows);\r\n        } else {\r\n            setRows(rowsInitial);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        if (event?.target.value) setRowsPerPage(parseInt(event?.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Product Review\" content={false}>\r\n            <CardContent>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Search Product\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton size=\"large\">\r\n                                <FileCopyIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Print\">\r\n                            <IconButton size=\"large\">\r\n                                <PrintIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filter\">\r\n                            <IconButton size=\"large\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                        theme={theme}\r\n                        selected={selected}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                /** Make sure no display bugs if row isn't an OrderData object */\r\n                                if (typeof row === 'number') return null;\r\n                                const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\" onClick={(event) => handleClick(event, row.name)} sx={{ pl: 3 }}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"body2\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                {row.name}{' '}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>{row.author}</TableCell>\r\n                                        <TableCell>{row.review}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Rating name=\"read-only\" value={row.rating} precision={0.5} readOnly />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.date}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.status === 1 && <Chip label=\"Complete\" chipcolor=\"success\" size=\"small\" />}\r\n                                            {row.status === 2 && <Chip label=\"Processing\" chipcolor=\"orange\" size=\"small\" />}\r\n                                            {row.status === 3 && <Chip label=\"Confirm\" chipcolor=\"primary\" size=\"small\" />}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <IconButton color=\"primary\" size=\"large\">\r\n                                                <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                            <IconButton color=\"secondary\" onClick={handleClickOpenDialog} size=\"large\">\r\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                {/* review edit dialog */}\r\n                <ReviewEdit open={open} handleCloseDialog={handleCloseDialog} />\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ProductReview;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiChip from '@mui/material/Chip';\r\n\r\n// ==============================|| CHIP ||============================== //\r\n\r\nconst Chip = ({ chipcolor, disabled, variant, sx = {}, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    let defaultSX = {\r\n        color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.main,\r\n        bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.light,\r\n        ':hover': {\r\n            color: theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.dark + 90 : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    let outlineSX = {\r\n        color: theme.palette.primary.main,\r\n        bgcolor: 'transparent',\r\n        border: '1px solid',\r\n        borderColor: theme.palette.primary.main,\r\n        ':hover': {\r\n            color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    switch (chipcolor) {\r\n        case 'secondary':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.secondary.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.secondary.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light,\r\n                    ':hover': {\r\n                        color: theme.palette.secondary.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark + 90 : theme.palette.secondary.main\r\n                    }\r\n                };\r\n            break;\r\n        case 'success':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.success.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.success.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.success.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark + 90 : theme.palette.success.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'error':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.error.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.error.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.error.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark + 90 : theme.palette.error.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'orange':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.orange?.main,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.dark,\r\n                        bgcolor: theme.palette.orange?.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: theme.palette.orange?.light,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.light,\r\n                        bgcolor: theme.palette.orange?.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'warning':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.warning.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.dark,\r\n                        bgcolor: theme.palette.warning.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: theme.palette.warning.light,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.warning.dark + 90 : theme.palette.warning.dark\r\n                    }\r\n                };\r\n            break;\r\n        default:\r\n    }\r\n\r\n    if (disabled) {\r\n        if (variant === 'outlined')\r\n            outlineSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: 'transparent',\r\n                border: '1px solid',\r\n                borderColor: theme.palette.grey[500],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: 'transparent'\r\n                }\r\n            };\r\n        else\r\n            defaultSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: theme.palette.grey[50],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: theme.palette.grey[50]\r\n                }\r\n            };\r\n    }\r\n\r\n    let SX = defaultSX;\r\n    if (variant === 'outlined') {\r\n        SX = outlineSX;\r\n    }\r\n\r\n    SX = { ...SX, ...sx };\r\n    return <MuiChip {...others} sx={SX} />;\r\n};\r\n\r\nChip.propTypes = {\r\n    sx: PropTypes.object,\r\n    chipcolor: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default Chip;\r\n"],"sourceRoot":""}