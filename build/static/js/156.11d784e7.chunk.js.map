{"version":3,"sources":["views/pages/pricing/Price2.js"],"names":["FeatureTitleWrapper","styled","CardContent","theme","background","palette","mode","default","grey","textAlign","paddingTop","paddingBottom","FeatureContentWrapper","borderLeft","borderColor","position","overflow","breakpoints","down","fontSize","padding","PopularBadgeWrapper","secondary","main","color","display","top","right","transform","plans","id","popular","title","price","monthly","yearly","planList","type","label","permission","PlanList","plan","view","priceFlag","useTheme","item","xs","sm","md","sx","container","spacing","gridSpacing","variant","fontWeight","primary","ListItem","index","px","py","opacity","OrderButton","Price2","useState","setPriceFlag","setView","direction","justifyContent","disableElevation","mb","size","bgcolor","onClick","orientation","value","exclusive","onChange","event","newView","width","border","borderRadius","map","content","list","borderBottom","component","align","i"],"mappings":"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","file":"static/js/156.11d784e7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Button, ButtonGroup, Card, CardContent, Grid, Stack, Typography } from '@mui/material';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport CheckCircleTwoToneIcon from '@mui/icons-material/CheckCircle';\r\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\r\n\r\n// styles\r\nconst FeatureTitleWrapper = styled(CardContent)(({ theme }) => ({\r\n    background: theme.palette.mode === 'dark' ? `${theme.palette.background.default} !important` : `${theme.palette.grey[100]} !important`,\r\n    textAlign: 'left',\r\n    paddingTop: 12,\r\n    paddingBottom: '12px !important'\r\n}));\r\n\r\nconst FeatureContentWrapper = styled(CardContent)(({ theme }) => ({\r\n    borderLeft: '1px solid',\r\n    borderColor: theme.palette.mode === 'dark' ? `${theme.palette.background.default} !important` : `${theme.palette.grey[200]} !important`,\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.down('lg')]: {\r\n        fontSize: '1.25rem',\r\n        padding: '40px 16px'\r\n    }\r\n}));\r\n\r\nconst PopularBadgeWrapper = styled('div')(({ theme }) => ({\r\n    background: theme.palette.secondary.main,\r\n    color: '#fff',\r\n    display: 'inline-block',\r\n    padding: '40px 40px 5px',\r\n    fontSize: '0.8125rem',\r\n    position: 'absolute',\r\n    top: -24,\r\n    right: -55,\r\n    transform: 'rotate(45deg)'\r\n}));\r\n\r\nconst plans = [\r\n    {\r\n        id: 1,\r\n        popular: false,\r\n        title: 'Starters',\r\n        price: {\r\n            monthly: 25,\r\n            yearly: 225\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        popular: true,\r\n        title: 'Scalability',\r\n        price: {\r\n            monthly: 125,\r\n            yearly: 825\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        popular: false,\r\n        title: 'Enterprise',\r\n        price: {\r\n            monthly: 225,\r\n            yearly: 1025\r\n        }\r\n    }\r\n];\r\n\r\nconst planList = [\r\n    {\r\n        type: 'group',\r\n        label: 'Features'\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Only 1 User uses',\r\n        permission: [1, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: '10 Projects for',\r\n        permission: [0, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Unlimited Bandwidth',\r\n        permission: [0, 0, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Unlimited Data',\r\n        permission: [0, 0, 1]\r\n    },\r\n    {\r\n        type: 'group',\r\n        label: 'Storage & Security'\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: '5GB of Storage',\r\n        permission: [0, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Fully Security Suite',\r\n        permission: [0, 0, 1]\r\n    }\r\n];\r\n\r\nconst PlanList = ({ plan, view, priceFlag }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3} md={3} sx={{ display: view !== plan.id ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n            <FeatureContentWrapper>\r\n                {plan.popular && <PopularBadgeWrapper>Popular</PopularBadgeWrapper>}\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            sx={{ fontSize: '1.25rem', fontWeight: 500, position: 'relative', color: theme.palette.primary.main }}\r\n                        >\r\n                            {plan.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            sx={{\r\n                                fontSize: '1.5rem',\r\n                                fontWeight: 700,\r\n                                '& > span': {\r\n                                    fontSize: '1.25rem',\r\n                                    fontWeight: 500\r\n                                },\r\n                                [theme.breakpoints.down('lg')]: {\r\n                                    fontSize: '1.25rem',\r\n                                    '& > span': {\r\n                                        fontSize: '1rem'\r\n                                    }\r\n                                }\r\n                            }}\r\n                        >\r\n                            <sup>$</sup>\r\n                            {priceFlag === 'yearly' ? plan.price.yearly : plan.price.monthly}\r\n                            <span>/{priceFlag === 'yearly' ? 'Year' : 'Month'}</span>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </FeatureContentWrapper>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nPlanList.propTypes = {\r\n    plan: PropTypes.object,\r\n    view: PropTypes.number,\r\n    priceFlag: PropTypes.string\r\n};\r\n\r\nconst ListItem = ({ item, index, view }) => (\r\n    <Grid item xs={4} sm={3} md={3} sx={{ display: view !== index + 1 ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n        {item === 1 && (\r\n            <Box sx={{ px: 3, py: 1.5 }}>\r\n                <CheckCircleTwoToneIcon sx={{ color: 'success.dark' }} />\r\n            </Box>\r\n        )}\r\n        {item === 0 && (\r\n            <Box sx={{ px: 3, py: 1.5 }}>\r\n                <RemoveRoundedIcon sx={{ opacity: '0.3' }} />\r\n            </Box>\r\n        )}\r\n    </Grid>\r\n);\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.number,\r\n    index: PropTypes.number,\r\n    view: PropTypes.number\r\n};\r\n\r\nconst OrderButton = ({ view, index, popular }) => (\r\n    <Grid item xs={12} sm={3} md={3} sx={{ display: view !== index ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n        <FeatureContentWrapper>\r\n            <Button variant={popular ? 'contained' : 'outlined'} color={popular ? 'secondary' : 'primary'}>\r\n                Order Now\r\n            </Button>\r\n        </FeatureContentWrapper>\r\n    </Grid>\r\n);\r\n\r\nOrderButton.propTypes = {\r\n    popular: PropTypes.bool,\r\n    index: PropTypes.number,\r\n    view: PropTypes.number\r\n};\r\n\r\n// =============================|| PRICING - PRICE 2 ||============================= //\r\n\r\nconst Price2 = () => {\r\n    const theme = useTheme();\r\n    const [priceFlag, setPriceFlag] = useState('monthly');\r\n\r\n    const [view, setView] = useState(1);\r\n    const handleChange = (event, newView) => {\r\n        if (newView !== null) {\r\n            setView(newView);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Stack direction=\"row\" spacing={gridSpacing} justifyContent=\"center\">\r\n                <ButtonGroup disableElevation variant=\"contained\" sx={{ mb: 3 }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        sx={{ bgcolor: priceFlag === 'yearly' ? 'primary.main' : 'primary.200' }}\r\n                        onClick={() => setPriceFlag('yearly')}\r\n                    >\r\n                        Annual\r\n                    </Button>\r\n                    <Button\r\n                        size=\"large\"\r\n                        sx={{ bgcolor: priceFlag === 'monthly' ? 'primary.main' : 'primary.200' }}\r\n                        onClick={() => setPriceFlag('monthly')}\r\n                    >\r\n                        Monthly\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Stack>\r\n\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                        <CardContent>\r\n                            <ToggleButtonGroup\r\n                                orientation=\"vertical\"\r\n                                value={view}\r\n                                exclusive\r\n                                onChange={handleChange}\r\n                                sx={{\r\n                                    width: '100%',\r\n                                    '& > button': {\r\n                                        border: 'none',\r\n                                        borderRadius: '5px ​!important'\r\n                                    },\r\n                                    '& > button.Mui-selected': {\r\n                                        background: `${theme.palette.background.default}!important`,\r\n                                        color: theme.palette.primary.main\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {plans.map((plan, index) => (\r\n                                    <ToggleButton key={index} value={plan.id}>\r\n                                        {plan.title}\r\n                                    </ToggleButton>\r\n                                ))}\r\n                            </ToggleButtonGroup>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <MainCard content={false} sx={{ textAlign: 'center' }}>\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={3} md={3} />\r\n                            {plans.map((plan, index) => (\r\n                                <PlanList plan={plan} view={view} priceFlag={priceFlag} key={index} />\r\n                            ))}\r\n                        </Grid>\r\n                        {planList.map((list, index) => (\r\n                            <Fragment key={index}>\r\n                                {list.type === 'group' && (\r\n                                    <FeatureTitleWrapper>\r\n                                        <Typography variant=\"subtitle1\">{list.label}</Typography>\r\n                                    </FeatureTitleWrapper>\r\n                                )}\r\n                                {list.type === 'list' && (\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={0}\r\n                                        sx={{\r\n                                            borderBottom: '1px solid',\r\n                                            borderColor:\r\n                                                theme.palette.mode === 'dark'\r\n                                                    ? `${theme.palette.background.default} !important`\r\n                                                    : `${theme.palette.grey[200]} !important`\r\n                                        }}\r\n                                    >\r\n                                        <Grid item xs={8} sm={3} md={3}>\r\n                                            <Box sx={{ px: 3, py: 1.5 }}>\r\n                                                <Typography component=\"div\" align=\"left\" variant=\"body2\">\r\n                                                    {list.label}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        {list.permission?.map((item, i) => (\r\n                                            <ListItem key={i} item={item} index={index} view={view} />\r\n                                        ))}\r\n                                    </Grid>\r\n                                )}\r\n                            </Fragment>\r\n                        ))}\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={3} md={3} />\r\n                            <OrderButton view={view} index={1} />\r\n                            <OrderButton view={view} index={2} popular />\r\n                            <OrderButton view={view} index={3} />\r\n                        </Grid>\r\n                    </MainCard>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Price2;\r\n"],"sourceRoot":""}