{"version":3,"sources":["views/forms/plugins/Modal/SimpleModal.js","views/forms/plugins/Modal/ServerModal.js","views/forms/plugins/Modal/index.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","Body","forwardRef","ref","modalStyle","handleClose","tabIndex","MainCard","style","sx","position","width","xs","lg","title","content","secondary","IconButton","onClick","size","fontSize","CardContent","Typography","variant","mt","Divider","CardActions","SimpleModal","useState","open","setOpen","Grid","container","justifyContent","Button","type","onClose","propTypes","PropTypes","object","func","ModalWrapper","styled","marginBottom","height","flexGrow","minWidth","zIndex","display","ServerModal","rootRef","useRef","disablePortal","disableEnforceFocus","disableAutoFocus","p","alignItems","current","Modal","link","Avatar","color","outline","others","theme","useTheme","colorSX","palette","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","spacing","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","_excluded","colorTransformations","textPrimary","textSecondary","error","LinkRoot","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","button","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","WebkitTapHighlightColor","backgroundColor","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","React","inProps","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event"],"mappings":"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","file":"static/js/108.6f425511.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// generate random\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\n// modal position\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst Body = forwardRef(({ modalStyle, handleClose }, ref) => (\r\n    <div ref={ref} tabIndex={-1}>\r\n        {/**\r\n         * style={modalStyle}\r\n         * Property 'style' does not exist on type 'IntrinsicAttributes & MainCardProps & RefAttributes<HTMLDivElement>\r\n         */}\r\n        <MainCard\r\n            style={modalStyle}\r\n            sx={{\r\n                position: 'absolute',\r\n                width: { xs: 280, lg: 450 },\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            title=\"Title\"\r\n            content={false}\r\n            secondary={\r\n                <IconButton onClick={handleClose} size=\"large\">\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            <CardContent>\r\n                <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\r\n                    mollit irure enim tempor in.\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <SimpleModal />\r\n            </CardActions>\r\n        </MainCard>\r\n    </div>\r\n));\r\n\r\nBody.propTypes = {\r\n    modalStyle: PropTypes.object,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\n// ==============================|| SIMPLE MODAL ||============================== //\r\n\r\nexport default function SimpleModal() {\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = useState(getModalStyle);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"flex-end\">\r\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\r\n                Open Modal\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\r\n            </Modal>\r\n        </Grid>\r\n    );\r\n}\r\n","import { useRef } from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst ModalWrapper = styled('div')({\r\n    marginBottom: 16,\r\n    height: 500,\r\n    flexGrow: 1,\r\n    minWidth: 300,\r\n    zIndex: -1,\r\n    transform: 'translateZ(0)',\r\n    '@media all and (-ms-high-contrast: none)': {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n// ==============================|| SERVER MODAL ||============================== //\r\n\r\nexport default function ServerModal() {\r\n    const rootRef = useRef(null);\r\n\r\n    return (\r\n        <ModalWrapper ref={rootRef}>\r\n            <Modal\r\n                disablePortal\r\n                disableEnforceFocus\r\n                disableAutoFocus\r\n                open\r\n                aria-labelledby=\"server-modal-title\"\r\n                aria-describedby=\"server-modal-description\"\r\n                sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}\r\n                container={() => rootRef.current}\r\n            >\r\n                <MainCard\r\n                    sx={{\r\n                        width: 450,\r\n                        zIndex: 1\r\n                    }}\r\n                    title=\"Server Side Modal\"\r\n                    content={false}\r\n                    secondary={\r\n                        <IconButton size=\"large\">\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">\r\n                            Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                            Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute\r\n                            est in mollit irure enim tempor in.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" type=\"button\">\r\n                                Open Modal\r\n                            </Button>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </MainCard>\r\n            </Modal>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n","// project imports\r\nimport SimpleModal from './SimpleModal';\r\nimport ServerModal from './ServerModal';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// ==============================|| MODAL PAGE ||============================== //\r\n\r\nconst Modal = () => (\r\n    <MainCard title=\"Simple Modal\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/modal/\" />}>\r\n        <ServerModal />\r\n        <SimpleModal />\r\n    </MainCard>\r\n);\r\n\r\nexport default Modal;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"sourceRoot":""}