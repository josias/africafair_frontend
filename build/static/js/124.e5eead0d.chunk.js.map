{"version":3,"sources":["views/forms/tables/TablesCustomized.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","createData","name","calories","fat","carbs","protein","rows","CustomizedTables","content","title","secondary","link","sx","minWidth","pl","align","pr","map","row","component","scope","Avatar","outline","size","others","useTheme","colorSX","background","paper","bgcolor","outlineSX","borderColor","sizeSX","width","spacing","height","CardSecondaryAction","icon","placement","disableRipple","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","main","id","transform"],"mappings":"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","file":"static/js/124.e5eead0d.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, tableCellClasses } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// styles\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14\r\n    }\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0\r\n    }\r\n}));\r\n\r\n// table data\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// ==============================|| TABLE - CUSTOMIZED ||============================== //\r\n\r\nexport default function CustomizedTables() {\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Customized Tables\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 320 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell sx={{ pl: 3 }}>Dessert (100g serving)</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n                            <StyledTableCell sx={{ pr: 3 }} align=\"right\">\r\n                                Protein&nbsp;(g)\r\n                            </StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <StyledTableRow hover key={row.name}>\r\n                                <StyledTableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n                                <StyledTableCell sx={{ pr: 3 }} align=\"right\">\r\n                                    {row.protein}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </MainCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}